//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.03.25 at 03:18:58 PM EDT 
//

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for QuestionList complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="QuestionList">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="StandardQuestion" type="{}StandardQuestion" maxOccurs="unbounded"/>
 *         &lt;element name="ElementaryQuestion" type="{}ElementaryQuestion" maxOccurs="unbounded"/>
 *         &lt;element name="AdvancedQuestion" type="{}AdvancedQuestion" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * @author JDOM Library
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "QuestionList", propOrder = { "standardQuestion",
		"elementaryQuestion", "advancedQuestion" })
public class QuestionList {
	
	/** List of StandardQuestions */
	@XmlElement(name = "StandardQuestion", required = true)
	protected List<StandardQuestion> standardQuestion;
	/** List of ElementaryQuestions */
	@XmlElement(name = "ElementaryQuestion", required = true)
	protected List<ElementaryQuestion> elementaryQuestion;
	/** List of AdvancedQuestions */
	@XmlElement(name = "AdvancedQuestion", required = true)
	protected List<AdvancedQuestion> advancedQuestion;

	/**
	 * Gets the value of the standardQuestion property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the standardQuestion property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getStandardQuestion().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link StandardQuestion }
	 * 
	 * @return a list of StandardQuestions
	 */
	public List<StandardQuestion> getStandardQuestion() {
		if (standardQuestion == null) {
			standardQuestion = new ArrayList<StandardQuestion>();
		}
		return this.standardQuestion;
	}

	/**
	 * Gets the value of the elementaryQuestion property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the elementaryQuestion property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getElementaryQuestion().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link ElementaryQuestion }
	 * 
	 * @return a List of ElementaryQuestions
	 */
	public List<ElementaryQuestion> getElementaryQuestion() {
		if (elementaryQuestion == null) {
			elementaryQuestion = new ArrayList<ElementaryQuestion>();
		}
		return this.elementaryQuestion;
	}

	/**
	 * Gets the value of the advancedQuestion property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the advancedQuestion property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getAdvancedQuestion().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link AdvancedQuestion }
	 * 
	 * @return a List of AdvancedQuestions
	 */
	public List<AdvancedQuestion> getAdvancedQuestion() {
		if (advancedQuestion == null) {
			advancedQuestion = new ArrayList<AdvancedQuestion>();
		}
		return this.advancedQuestion;
	}

}
